<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.javalec.ex.Dao.PayDao">
	
	<!-- 회원 장바구니 보기 -->
	<select id="cart_view" resultType="com.javalec.ex.Dto.PayDto.CartDto">
		select cart.cart_code, product.p_code, product.p_name, product.p_category, product.p_price, product.p_point, cart.amount 
		from cart, product
		where cart.id=#{param1} and cart.p_code=product.p_code
	</select>
	
	<!-- 장바구니 수량변경 -->
	<update id="change_amount" parameterType="com.javalec.ex.Dto.PayDto.CartDto">
		update cart set amount=#{amount} where cart_code=#{cart_code}
	</update>
	
	<!-- 장바구니 삭제 -->
	<delete id="cart_del">
		delete from cart where cart_code in( 
		<foreach collection="array" item="del" separator=",">
		#{del}
		</foreach>
		)
	</delete>
	
	<!-- 장바구니에서 주문페이지로 제품 넘기기-->
	<select id="go_order" resultType="com.javalec.ex.Dto.PayDto.CartDto">
		select cart.cart_code, product.p_code, product.p_name, product.p_category, product.p_price, product.p_point, cart.amount 
		from cart, product
		where cart.cart_code in (
		<foreach collection="array" item="from_cart" separator=",">
		#{from_cart}
		</foreach>
		)
		and cart.p_code=product.p_code
	</select>	
	
	<!-- 포인트 적립 리스트,총액 가져오기 -->
	<select id="point_list" resultType="com.javalec.ex.Dto.PayDto.PointDto">
		select * from point where id=#{param1} order by po_date desc 
	</select>
	
	<select id="point_sum" resultType="int" >
		select nvl(sum(po_point),0) from point where id=#{param1}
	</select>
	
	<!-- 포인트 사용 리스트,총액 가져오기 -->
	<select id="upoint_list" resultType="com.javalec.ex.Dto.PayDto.Use_pointDto">
		select * from use_point where id=#{param1} order by u_date desc
	</select>
	
	<select id="upoint_sum" resultType="integer">
		select nvl(sum(u_point),0) from use_point where id=#{param1}
	</select>
	
	<!-- 사용가능포인트-->
	<select id="usable_point" resultType="int">
		select pointsum-upointsum from (select nvl(sum(po_point),0) as pointsum from point where id=#{param1}),
		(select nvl(sum(u_point),0) as upointsum from use_point where id=#{param1})
	</select>
	
	
	<!-- 사용가능 쿠폰리스트 가져오기-->
	<select id="ucou_list" resultType="com.javalec.ex.Dto.PayDto.Coupon_listDto">
		<![CDATA[select coupon.cou_code,coupon.cou_name,coupon_list.cou_num,coupon.cou_reward, coupon.cou_limit, coupon_list.issue_date,coupon_list.exp_date, coupon_list.cou_state   
		from coupon, coupon_list 
		where id=#{param1} and coupon.cou_code=coupon_list.cou_code and (coupon_list.exp_date-sysdate)>0 and coupon_list.cou_state is null
		order by coupon_list.exp_date asc]]>
	</select>
	
	<!-- 사용가능한 쿠폰 갯수 -->
	<select id="usable_coupon" resultType="Integer">
		<![CDATA[select nvl(count(*),0) as count
		from coupon, coupon_list 
		where id=#{param1} and coupon.cou_code=coupon_list.cou_code and (coupon_list.exp_date-sysdate)>0 and coupon_list.cou_state is null]]>
	</select>
	
	<!-- 사용불가능 쿠폰리스트 가져오기-->
	<select id="ncou_list" resultType="com.javalec.ex.Dto.PayDto.Coupon_listDto">
		<![CDATA[select coupon.cou_name,coupon.cou_reward,coupon_list.issue_date,coupon_list.exp_date, coupon_list.cou_state   
		from coupon, coupon_list 
		where id=#{param1} and coupon.cou_code=coupon_list.cou_code and ((coupon_list.exp_date-sysdate)<0 or coupon_list.cou_state is not null)
		order by coupon_list.exp_date asc]]>
	</select>
	
	<!-- 회원정보 반영 -->
	<update id="update_member" parameterType="com.javalec.ex.Dto.MDto.Member_Dto">
		update member 
		set email=#{email},post=#{post},address1=#{address1},address2=#{address2},phone1=#{phone1},phone2=#{phone2},phone3=#{phone3} 
		where id=#{id}
	</update>
	
	<!-- 주문페이지 주문서 작성--> 
	<insert id="make_order" parameterType="com.javalec.ex.Dto.PayDto.PaymentDto">
		insert into payment values(to_char(sysdate,'yyyyMMdd')||'-'||PAYMENT_SEQ.nextval,
		#{id},#{cou_num},#{cou_discount},#{earn_point},#{pay_point},#{del_price},#{total_price},
		<choose>
		<when test="pay_method.equals('credit_card')">
		'신용카드'
		</when>
		<when test="pay_method.equals('account_transfer')">
		'실시간 계좌이체'
		</when>
		<when test="pay_method.equals('virtual_account')">
		'가상계좌'
		</when>
		<when test="pay_method.equals('escrow')">
		'에스크로'
		</when>
		<when test="pay_method.equals('deposit')">
		'무통장 입금'
		</when>
		</choose>
		,'결제완료',sysdate,sysdate)
	</insert>
	
	<!-- 주문번호 가져오기 -->
	<select id="get_paycode" resultType="String">
		select pay_code from(select * from payment where id=#{param1} and pay_state=
		'결제완료' order by init_date desc) where ROWNUM=1
	</select>
	
	<!-- 주문전체 가져오기 -->
	<select id="get_payment" resultType="com.javalec.ex.Dto.PayDto.PaymentDto">
		select * from payment where pay_code=#{param1}
	</select>
	
	<!-- 수취인 등록 -->
	<insert id="make_buyer" parameterType="com.javalec.ex.Dto.PayDto.BuyerDto">
		insert into buyer values(#{pay_code},#{id},#{name},'0'||#{del_phone1}||'-'||#{del_phone2}||'-'||#{del_phone3},#{email1}||'@'||#{email2},#{del_post},
		#{del_address1},#{del_address2},#{del_demand})
	</insert>
	
	<!-- 장바구니 코드로 제품코드,수량 가져오기 -->
	<select id="get_sold_info" resultType="com.javalec.ex.Dto.PayDto.CartDto">
		select * from cart where cart_code=#{param1} 
	</select>
	
	<!-- 주문물품 등록 -->
	<insert id="sold_product" parameterType="com.javalec.ex.Dto.PayDto.Sold_productsDto">
		insert into sold_products values(#{pay_code},#{p_code},#{id},#{amount})
	</insert>
	
	<!-- 쿠폰사용등록 -->
	<update id="update_coupon">
		update coupon_list set cou_state=sysdate where cou_num=#{param1}
	</update>
	
	<!-- 포인트 적립 -->
	<update id="plus_point" parameterType="com.javalec.ex.Dto.PayDto.PaymentDto">
		insert into point values(POINT_SEQ.nextval,#{id},'구매 포인트 적립',#{earn_point},sysdate,#{pay_code}) 
	</update>
	
	<!-- 사용 포인트 등록 -->
	<update id="minus_point" parameterType="com.javalec.ex.Dto.PayDto.PaymentDto">
		insert into use_point values(#{id},#{pay_point},sysdate,'상품구매 포인트 사용',#{pay_code}) 
	</update>
	
	<!-- 재고 차감 -->
	<update id="update_stock" parameterType="hashMap">
		update product set p_stock=p_stock-#{p_code} where p_code=#{amount}
	</update>
</mapper>